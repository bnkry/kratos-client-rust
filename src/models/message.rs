/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.11.0
 * Contact: office@ory.sh
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Message {
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    /// CreatedAt is a helper struct field for gobuffalo.pop.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "recipient", skip_serializing_if = "Option::is_none")]
    pub recipient: Option<String>,
    #[serde(rename = "send_count", skip_serializing_if = "Option::is_none")]
    pub send_count: Option<i64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::CourierMessageStatus>,
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    #[serde(rename = "template_type", skip_serializing_if = "Option::is_none")]
    pub template_type: Option<TemplateTypeEnum>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<crate::models::CourierMessageType>,
    /// UpdatedAt is a helper struct field for gobuffalo.pop.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
}

impl Default for Message {
    fn default() -> Self {
        Self::new()
    }
}

impl Message {
    pub fn new() -> Message {
        Message {
                body: None,
                created_at: None,
                id: None,
                recipient: None,
                send_count: None,
                status: None,
                subject: None,
                template_type: None,
                _type: None,
                updated_at: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TemplateTypeEnum {
    #[serde(rename = "recovery_invalid")]
    RecoveryInvalid,
    #[serde(rename = "recovery_valid")]
    RecoveryValid,
    #[serde(rename = "recovery_code_invalid")]
    RecoveryCodeInvalid,
    #[serde(rename = "recovery_code_valid")]
    RecoveryCodeValid,
    #[serde(rename = "verification_invalid")]
    VerificationInvalid,
    #[serde(rename = "verification_valid")]
    VerificationValid,
    #[serde(rename = "verification_code_invalid")]
    VerificationCodeInvalid,
    #[serde(rename = "verification_code_valid")]
    VerificationCodeValid,
    #[serde(rename = "otp")]
    Otp,
    #[serde(rename = "stub")]
    Stub,
}

